---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "src/layouts/SimpleWithNavigation.astro";
import {
  Prose,
  TextWritingPreviewSM,
  PageCut,
  WritingMetaDetails,
} from "src/components/astro";

import img1 from "public/images/img-3.jpg";

export async function getStaticPaths() {
  const writings = await getCollection("writings");
  return writings.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const allWritings = await getCollection(
  "writings",
  ({ id }) => id !== entry.id,
);

const index = allWritings.findIndex(({ id }) => id === entry.id);
const readAlso = [
  allWritings[index - 1],
  allWritings[index + 1],
  allWritings[index + 2],
  allWritings[index + 3],
]
  .filter(Boolean)
  .slice(0, 3);
---

<Layout
  seo={{
    title: entry.data.title,
    description: entry.data.headline!,
    openGraph: {
      basic: {
        type: "website",
        title: entry.data.title!,
        image: img1.src,
      },
    },
    twitter: {
      card: "summary_large_image",
      title: entry.data.title,
      image: img1.src,
      imageAlt: entry.data.title,
      description: entry.data.headline,
    },
  }}
>
  <div
    class="relative z-40 mx-auto pt-10 md:max-w-[80ch] lg:max-w-[86ch] xl:max-w-[110ch]"
  >
    <div class="aspect-[5/3] px-6 pb-16">
      <Image
        class="h-full w-full rounded-xl object-cover"
        src={img1}
        alt={entry.data.title || ""}
      />
    </div>
  </div>

  <div
    class="relative z-40 mx-auto pb-20 sm:max-w-[74ch] md:max-w-[74ch] lg:max-w-[76ch] xl:max-w-[90ch]"
  >
    <div class="sm:px-8 md:px-8 lg:px-10 xl:px-6">
      <h1 class="my-h1">{entry.data.title}</h1>

      <WritingMetaDetails writing={entry} />
    </div>

    <Prose>
      <Content />
    </Prose>
  </div>

  <div
    class="relative z-40 bg-gradient-to-tr from-white/5 to-orange-700/5 pt-20"
  >
    <PageCut text="Читайте также:" />

    <div
      class="container relative z-40 mx-auto pb-20 pt-20 md:px-8 lg:px-10 xl:px-6"
    >
      <div class="mx-6 columns-1 gap-20 text-sm xl:columns-3">
        {
          readAlso.map((writing) => (
            <TextWritingPreviewSM writing={writing} displayImage={false} />
          ))
        }
      </div>
    </div>
  </div>
</Layout>
