---
import { getCollection } from "astro:content";
import type { GetStaticPathsOptions } from "astro";

import Layout from "src/layouts/SimpleWithNavigation.astro";
import { reader } from "src/reader";

import {
  FeaturedWritingPreviewHD,
  TextWritingPreviewHD,
  WritingsIndex,
} from "src/components/astro";

const writings = await getCollection("writings");
writings.sort((a, b) =>
  b.data.date === a.data.date
    ? 0
    : (b.data.date || "") < (a.data.date || "")
      ? -1
      : 1,
);

const latestWritings = writings.slice(0, 10);
const [featuredWriting, ...otherWritings] = latestWritings;

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const writings = await getCollection("writings");
  writings.sort((a, b) =>
    b.data.date === a.data.date
      ? 0
      : (b.data.date || "") < (a.data.date || "")
        ? -1
        : 1,
  );

  return paginate(writings, { pageSize: 10 });
}

const { page } = Astro.props;

const site = await reader.singletons.site.read();
---

<Layout
  seo={{
    title: site?.writings.title,
    description: site?.writings.description,
    openGraph: site?.writings.image
      ? {
          basic: {
            type: "website",
            title: site.writings.title || "Публикации",
            image: site.writings.image,
          },
        }
      : undefined,
    twitter: site?.writings.image
      ? {
          card: "summary_large_image",
          title: site.writings.title || "Публикации",
          image: site?.writings.image,
          imageAlt: site.writings.title || "Публикации",
          description: site?.writings.description,
        }
      : undefined,
  }}
>
  {
    page.currentPage === 1 ? (
      <WritingsIndex writings={page.data} />
    ) : (
      <div class="container relative z-40 mx-auto max-w-[130ch] px-6 pb-24 pt-16 md:px-8 lg:px-8 xl:px-10">
        <div class="pb-20">
          <FeaturedWritingPreviewHD writing={featuredWriting} />
        </div>

        <div class="flex flex-col gap-20">
          {otherWritings.map((writing) => (
            <TextWritingPreviewHD writing={writing} />
          ))}
        </div>
      </div>
    )
  }
</Layout>
